{"ast":null,"code":"import React,{useState}from\"react\";import Editor from\"@monaco-editor/react\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[language,setLanguage]=useState(\"python\");const[userCode,setUserCode]=useState(`# Write your function here\\ndef isPalindrome(s):\\n    import re\\n    filtered = re.sub(r'[^a-zA-Z0-9]', '', s).lower()\\n    return filtered == filtered[::-1]`);const[output,setOutput]=useState(\"\");const[showHint,setShowHint]=useState(false);const testCases=[{input:\"A man, a plan, a canal: Panama\",expected:\"True\"},{input:\"race a car\",expected:\"False\"},{input:\" \",expected:\"True\"}];const runCode=async()=>{try{const response=await fetch(\"http://localhost:5002/execute\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({language,code:userCode,tests:testCases})});const result=await response.json();setOutput(result.output);}catch(error){setOutput(\"Error: Unable to connect to the execution server.\");}};return/*#__PURE__*/_jsxs(\"div\",{style:{padding:\"20px\",fontFamily:\"Arial\",maxWidth:\"800px\",margin:\"auto\"},children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Valid Palindrome\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Write a function that returns True if a string is a palindrome, ignoring non-alphanumeric characters and case.\"}),/*#__PURE__*/_jsxs(\"div\",{onClick:()=>setShowHint(!showHint),style:{marginTop:\"20px\",backgroundColor:\"#eef\",padding:\"10px 15px\",borderRadius:\"8px\",cursor:\"pointer\",userSelect:\"none\",boxShadow:\"0 2px 6px rgba(0,0,0,0.1)\",transition:\"all 0.3s ease\"},children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\uD83D\\uDCA1 Hint\"}),showHint&&/*#__PURE__*/_jsx(\"div\",{style:{marginTop:\"10px\",color:\"#333\"},children:\"Try filtering the string to only alphanumeric characters, convert it to lowercase, then compare it with its reverse.\"})]}),/*#__PURE__*/_jsx(\"h2\",{style:{marginTop:\"30px\"},children:\"Editor\"}),/*#__PURE__*/_jsx(Editor,{height:\"300px\",language:language,value:userCode,onChange:newValue=>setUserCode(newValue)}),/*#__PURE__*/_jsx(\"button\",{onClick:runCode,style:{marginTop:\"10px\",padding:\"10px\"},children:\"Run Code\"}),output&&/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:\"20px\",backgroundColor:\"#f4f4f4\",padding:\"15px\",borderRadius:\"8px\",maxHeight:\"300px\",overflowY:\"auto\",whiteSpace:\"pre-wrap\",wordWrap:\"break-word\"},children:[/*#__PURE__*/_jsx(\"h3\",{style:{marginBottom:\"10px\"},children:\"Output and AI Feedback:\"}),/*#__PURE__*/_jsx(\"pre\",{style:{margin:0},children:output})]})]});}export default App;","map":{"version":3,"names":["React","useState","Editor","jsx","_jsx","jsxs","_jsxs","App","language","setLanguage","userCode","setUserCode","output","setOutput","showHint","setShowHint","testCases","input","expected","runCode","response","fetch","method","headers","body","JSON","stringify","code","tests","result","json","error","style","padding","fontFamily","maxWidth","margin","children","onClick","marginTop","backgroundColor","borderRadius","cursor","userSelect","boxShadow","transition","color","height","value","onChange","newValue","maxHeight","overflowY","whiteSpace","wordWrap","marginBottom"],"sources":["/Users/pranaylunavat/Desktop/leetcode-clone-with-better-feedback/client/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Editor from \"@monaco-editor/react\";\n\nfunction App() {\n  const [language, setLanguage] = useState(\"python\");\n  const [userCode, setUserCode] = useState(`# Write your function here\\ndef isPalindrome(s):\\n    import re\\n    filtered = re.sub(r'[^a-zA-Z0-9]', '', s).lower()\\n    return filtered == filtered[::-1]`);\n  const [output, setOutput] = useState(\"\");\n  const [showHint, setShowHint] = useState(false);\n\n  const testCases = [\n    { input: \"A man, a plan, a canal: Panama\", expected: \"True\" },\n    { input: \"race a car\", expected: \"False\" },\n    { input: \" \", expected: \"True\" }\n  ];\n\n  const runCode = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5002/execute\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ language, code: userCode, tests: testCases }),\n      });\n      const result = await response.json();\n      setOutput(result.output);\n    } catch (error) {\n      setOutput(\"Error: Unable to connect to the execution server.\");\n    }\n  };\n\n  return (\n    <div style={{ padding: \"20px\", fontFamily: \"Arial\", maxWidth: \"800px\", margin: \"auto\" }}>\n      <h1>Valid Palindrome</h1>\n      <p>\n        Write a function that returns True if a string is a palindrome, ignoring non-alphanumeric characters and case.\n      </p>\n\n      {/* Hint Box */}\n      <div\n        onClick={() => setShowHint(!showHint)}\n        style={{\n          marginTop: \"20px\",\n          backgroundColor: \"#eef\",\n          padding: \"10px 15px\",\n          borderRadius: \"8px\",\n          cursor: \"pointer\",\n          userSelect: \"none\",\n          boxShadow: \"0 2px 6px rgba(0,0,0,0.1)\",\n          transition: \"all 0.3s ease\"\n        }}\n      >\n        <strong>ðŸ’¡ Hint</strong>\n        {showHint && (\n          <div style={{ marginTop: \"10px\", color: \"#333\" }}>\n            Try filtering the string to only alphanumeric characters, convert it to lowercase, then compare it with its reverse.\n          </div>\n        )}\n      </div>\n\n      <h2 style={{ marginTop: \"30px\" }}>Editor</h2>\n      <Editor\n        height=\"300px\"\n        language={language}\n        value={userCode}\n        onChange={(newValue) => setUserCode(newValue)}\n      />\n\n      <button onClick={runCode} style={{ marginTop: \"10px\", padding: \"10px\" }}>Run Code</button>\n\n      {output && (\n        <div style={{\n          marginTop: \"20px\",\n          backgroundColor: \"#f4f4f4\",\n          padding: \"15px\",\n          borderRadius: \"8px\",\n          maxHeight: \"300px\",\n          overflowY: \"auto\",\n          whiteSpace: \"pre-wrap\",\n          wordWrap: \"break-word\"\n        }}>\n          <h3 style={{ marginBottom: \"10px\" }}>Output and AI Feedback:</h3>\n          <pre style={{ margin: 0 }}>{output}</pre>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,CAAAC,MAAM,KAAM,sBAAsB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE1C,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACb,KAAM,CAACC,QAAQ,CAAEC,WAAW,CAAC,CAAGR,QAAQ,CAAC,QAAQ,CAAC,CAClD,KAAM,CAACS,QAAQ,CAAEC,WAAW,CAAC,CAAGV,QAAQ,CAAC,+JAA+J,CAAC,CACzM,KAAM,CAACW,MAAM,CAAEC,SAAS,CAAC,CAAGZ,QAAQ,CAAC,EAAE,CAAC,CACxC,KAAM,CAACa,QAAQ,CAAEC,WAAW,CAAC,CAAGd,QAAQ,CAAC,KAAK,CAAC,CAE/C,KAAM,CAAAe,SAAS,CAAG,CAChB,CAAEC,KAAK,CAAE,gCAAgC,CAAEC,QAAQ,CAAE,MAAO,CAAC,CAC7D,CAAED,KAAK,CAAE,YAAY,CAAEC,QAAQ,CAAE,OAAQ,CAAC,CAC1C,CAAED,KAAK,CAAE,GAAG,CAAEC,QAAQ,CAAE,MAAO,CAAC,CACjC,CAED,KAAM,CAAAC,OAAO,CAAG,KAAAA,CAAA,GAAY,CAC1B,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,+BAA+B,CAAE,CAC5DC,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CAAE,cAAc,CAAE,kBAAmB,CAAC,CAC/CC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAElB,QAAQ,CAAEmB,IAAI,CAAEjB,QAAQ,CAAEkB,KAAK,CAAEZ,SAAU,CAAC,CACrE,CAAC,CAAC,CACF,KAAM,CAAAa,MAAM,CAAG,KAAM,CAAAT,QAAQ,CAACU,IAAI,CAAC,CAAC,CACpCjB,SAAS,CAACgB,MAAM,CAACjB,MAAM,CAAC,CAC1B,CAAE,MAAOmB,KAAK,CAAE,CACdlB,SAAS,CAAC,mDAAmD,CAAC,CAChE,CACF,CAAC,CAED,mBACEP,KAAA,QAAK0B,KAAK,CAAE,CAAEC,OAAO,CAAE,MAAM,CAAEC,UAAU,CAAE,OAAO,CAAEC,QAAQ,CAAE,OAAO,CAAEC,MAAM,CAAE,MAAO,CAAE,CAAAC,QAAA,eACtFjC,IAAA,OAAAiC,QAAA,CAAI,kBAAgB,CAAI,CAAC,cACzBjC,IAAA,MAAAiC,QAAA,CAAG,gHAEH,CAAG,CAAC,cAGJ/B,KAAA,QACEgC,OAAO,CAAEA,CAAA,GAAMvB,WAAW,CAAC,CAACD,QAAQ,CAAE,CACtCkB,KAAK,CAAE,CACLO,SAAS,CAAE,MAAM,CACjBC,eAAe,CAAE,MAAM,CACvBP,OAAO,CAAE,WAAW,CACpBQ,YAAY,CAAE,KAAK,CACnBC,MAAM,CAAE,SAAS,CACjBC,UAAU,CAAE,MAAM,CAClBC,SAAS,CAAE,2BAA2B,CACtCC,UAAU,CAAE,eACd,CAAE,CAAAR,QAAA,eAEFjC,IAAA,WAAAiC,QAAA,CAAQ,mBAAO,CAAQ,CAAC,CACvBvB,QAAQ,eACPV,IAAA,QAAK4B,KAAK,CAAE,CAAEO,SAAS,CAAE,MAAM,CAAEO,KAAK,CAAE,MAAO,CAAE,CAAAT,QAAA,CAAC,sHAElD,CAAK,CACN,EACE,CAAC,cAENjC,IAAA,OAAI4B,KAAK,CAAE,CAAEO,SAAS,CAAE,MAAO,CAAE,CAAAF,QAAA,CAAC,QAAM,CAAI,CAAC,cAC7CjC,IAAA,CAACF,MAAM,EACL6C,MAAM,CAAC,OAAO,CACdvC,QAAQ,CAAEA,QAAS,CACnBwC,KAAK,CAAEtC,QAAS,CAChBuC,QAAQ,CAAGC,QAAQ,EAAKvC,WAAW,CAACuC,QAAQ,CAAE,CAC/C,CAAC,cAEF9C,IAAA,WAAQkC,OAAO,CAAEnB,OAAQ,CAACa,KAAK,CAAE,CAAEO,SAAS,CAAE,MAAM,CAAEN,OAAO,CAAE,MAAO,CAAE,CAAAI,QAAA,CAAC,UAAQ,CAAQ,CAAC,CAEzFzB,MAAM,eACLN,KAAA,QAAK0B,KAAK,CAAE,CACVO,SAAS,CAAE,MAAM,CACjBC,eAAe,CAAE,SAAS,CAC1BP,OAAO,CAAE,MAAM,CACfQ,YAAY,CAAE,KAAK,CACnBU,SAAS,CAAE,OAAO,CAClBC,SAAS,CAAE,MAAM,CACjBC,UAAU,CAAE,UAAU,CACtBC,QAAQ,CAAE,YACZ,CAAE,CAAAjB,QAAA,eACAjC,IAAA,OAAI4B,KAAK,CAAE,CAAEuB,YAAY,CAAE,MAAO,CAAE,CAAAlB,QAAA,CAAC,yBAAuB,CAAI,CAAC,cACjEjC,IAAA,QAAK4B,KAAK,CAAE,CAAEI,MAAM,CAAE,CAAE,CAAE,CAAAC,QAAA,CAAEzB,MAAM,CAAM,CAAC,EACtC,CACN,EACE,CAAC,CAEV,CAEA,cAAe,CAAAL,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}